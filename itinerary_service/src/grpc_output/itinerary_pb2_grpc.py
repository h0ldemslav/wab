# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import itinerary_pb2 as itinerary__pb2


class ItineraryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTravelPlans = channel.unary_unary(
                '/itinerary.ItineraryService/GetTravelPlans',
                request_serializer=itinerary__pb2.Token.SerializeToString,
                response_deserializer=itinerary__pb2.TravelPlanResponse.FromString,
                )
        self.GetTravelPlanById = channel.unary_unary(
                '/itinerary.ItineraryService/GetTravelPlanById',
                request_serializer=itinerary__pb2.TokenWithTravelPlanId.SerializeToString,
                response_deserializer=itinerary__pb2.TravelPlan.FromString,
                )
        self.CreateTravelPlan = channel.unary_unary(
                '/itinerary.ItineraryService/CreateTravelPlan',
                request_serializer=itinerary__pb2.TokenWithTravelPlan.SerializeToString,
                response_deserializer=itinerary__pb2.TravelPlan.FromString,
                )
        self.UpdateTravelPlanById = channel.unary_unary(
                '/itinerary.ItineraryService/UpdateTravelPlanById',
                request_serializer=itinerary__pb2.TokenWithTravelPlan.SerializeToString,
                response_deserializer=itinerary__pb2.TravelPlan.FromString,
                )
        self.DeleteTravelPlanById = channel.unary_unary(
                '/itinerary.ItineraryService/DeleteTravelPlanById',
                request_serializer=itinerary__pb2.TokenWithTravelPlanId.SerializeToString,
                response_deserializer=itinerary__pb2.Empty.FromString,
                )


class ItineraryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetTravelPlans(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTravelPlanById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTravelPlan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTravelPlanById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTravelPlanById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ItineraryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTravelPlans': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTravelPlans,
                    request_deserializer=itinerary__pb2.Token.FromString,
                    response_serializer=itinerary__pb2.TravelPlanResponse.SerializeToString,
            ),
            'GetTravelPlanById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTravelPlanById,
                    request_deserializer=itinerary__pb2.TokenWithTravelPlanId.FromString,
                    response_serializer=itinerary__pb2.TravelPlan.SerializeToString,
            ),
            'CreateTravelPlan': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTravelPlan,
                    request_deserializer=itinerary__pb2.TokenWithTravelPlan.FromString,
                    response_serializer=itinerary__pb2.TravelPlan.SerializeToString,
            ),
            'UpdateTravelPlanById': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTravelPlanById,
                    request_deserializer=itinerary__pb2.TokenWithTravelPlan.FromString,
                    response_serializer=itinerary__pb2.TravelPlan.SerializeToString,
            ),
            'DeleteTravelPlanById': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTravelPlanById,
                    request_deserializer=itinerary__pb2.TokenWithTravelPlanId.FromString,
                    response_serializer=itinerary__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'itinerary.ItineraryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ItineraryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetTravelPlans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/itinerary.ItineraryService/GetTravelPlans',
            itinerary__pb2.Token.SerializeToString,
            itinerary__pb2.TravelPlanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTravelPlanById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/itinerary.ItineraryService/GetTravelPlanById',
            itinerary__pb2.TokenWithTravelPlanId.SerializeToString,
            itinerary__pb2.TravelPlan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTravelPlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/itinerary.ItineraryService/CreateTravelPlan',
            itinerary__pb2.TokenWithTravelPlan.SerializeToString,
            itinerary__pb2.TravelPlan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateTravelPlanById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/itinerary.ItineraryService/UpdateTravelPlanById',
            itinerary__pb2.TokenWithTravelPlan.SerializeToString,
            itinerary__pb2.TravelPlan.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteTravelPlanById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/itinerary.ItineraryService/DeleteTravelPlanById',
            itinerary__pb2.TokenWithTravelPlanId.SerializeToString,
            itinerary__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
